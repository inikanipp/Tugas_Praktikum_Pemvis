/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectakhir;


import javax.swing.*;
import java.awt.*;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.UIManager;
import java.io.File;
import java.io.FileInputStream;
import java.security.KeyStore;
import java.sql.PreparedStatement;
import javax.swing.JFileChooser;

/**
 *
 * @author ACER
 */

public class HomePage extends javax.swing.JFrame {
    private CardLayout cardLayout;
    private static String UsernameHome;
    private static int idUser, levelUser;
    private static boolean Data = false;
    private String Category = "SELECT makanan.id_makanan, makanan.gambar, makanan.nama_makanan, makanan.bahan_utama, wilayah.wilayah AS nama_wilayah FROM makanan JOIN wilayah ON  makanan.id_wilayah = wilayah.id_wilayah WHERE status = 'available';";
    private String Search = "SELECT makanan.id_makanan, makanan.gambar, makanan.nama_makanan, makanan.bahan_utama, wilayah.wilayah AS nama_wilayah FROM makanan JOIN wilayah ON  makanan.id_wilayah = wilayah.id_wilayah WHERE status = 'available';";
    
    File selectedFile;
    
    
    
    public static void setUsernameHome(String username){
        UsernameHome = username;
        System.out.println("nama adalah 1 : " + UsernameHome);
    }
    
    public static void setidUser(int id){
        idUser = id;
        System.out.println("ini adalah id user : " + idUser);
    }
    
    public static void setlevelUser(int level){
        levelUser = level;
    }
    
    public HomePage() {
        initComponents();
        System.out.println("nama adalah 2 : " + UsernameHome);
        startHome();
        load_comboBoxKaryawanProyek();
        createCards();
        loadCardsFavorite();
        loadCardsScrollHorizontalCategory();
        loadCardsVerticalCategory();
        setFont();
        jPanelTop1.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
        jPanelLeft1.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
        jPanelCenter1.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
        jPanelProfileShape.putClientProperty( FlatClientProperties.STYLE, "arc: 100" );
        jPanelCreateRecipe1.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
        jPanelCreateRecipe2.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
        colorPanel();
        JButton[] buttons = {
            jButtonRecom, jButtonAddRecipe, jButtonCategory, jButtonFavorite
        };
        for (JButton iniTombol: buttons){
        iniTombol.setFocusable(false);
        }
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    private void startHome(){
        jLabelNamaUserHome.setText(UsernameHome);
        jLabelKata.setText("Yukk pilih kulinermu " + UsernameHome);
        jLabelLevel.setText("Lvl " + levelUser);
        System.out.println("nama adalah : " + UsernameHome);
    }
    
    
    
    
    
    
    private void createCards() {

        try {
            jPanelScrollRecom.removeAll();
            Data = false;
            File fontStyleM1 = new File("src/font/Poppins-Medium.ttf");
            Font fontm24 = Font.createFont(Font.TRUETYPE_FONT, fontStyleM1).deriveFont(24f);
            
            File fontStyleR = new File("src/font/Poppins-Regular.ttf");
            Font fontr14 = Font.createFont(Font.TRUETYPE_FONT, fontStyleR).deriveFont(14f);

            String sql = "SELECT makanan.id_makanan, makanan.gambar, makanan.nama_makanan, makanan.bahan_utama, wilayah.wilayah AS nama_wilayah FROM makanan JOIN wilayah ON  makanan.id_wilayah = wilayah.id_wilayah; AND status = 'available'";
            String sql1 = "SELECT * FROM makanan";
            
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(Search);
            
            while (res.next()){

            Data = true;
            
            JPanel card = new JPanel();
            card.setBackground(Color.decode("#ffffff")); 

            card.setPreferredSize(new Dimension(809, 200));
            card.setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));
            card.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
            
            // ini untuk gambar
            JPanel pic = new JPanel();
            pic.setBackground(Color.red); // Variasi warna
            pic.setPreferredSize(new Dimension(180, 180));
            pic.setLayout(new BoxLayout(pic, BoxLayout.Y_AXIS));
            pic.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
            
            JLabel labelGambar = new JLabel();
            labelGambar.setFont(new Font("Arial", Font.BOLD, 16));
            
           
            byte[] imgBytes = res.getBytes("gambar");

         
            ImageIcon icon = new ImageIcon(imgBytes);

            // Ubah ukuran gambar (misal: 200x200)
            Image scaledImage = icon.getImage().getScaledInstance(180, 180, Image.SCALE_SMOOTH);
            labelGambar.setIcon(new ImageIcon(scaledImage));
            
            pic.add(labelGambar);
            
            
            // ini untuk content
            JPanel content = new JPanel();
            content.setBackground(Color.white); // Variasi warna
            content.setPreferredSize(new Dimension(600, 180));
            content.setLayout(new GridLayout(0, 1));
            
                // isi konten paling atas
                JPanel contentBox1 = new JPanel();
                contentBox1.setBackground(Color.white);
                contentBox1.setPreferredSize(new Dimension(600, 20));
                contentBox1.setLayout(new BoxLayout(contentBox1, BoxLayout.Y_AXIS));
  
                content.add(contentBox1);
                
                // isi conten paling bawah
                JPanel contentBox2 = new JPanel();
                contentBox2.setBackground(Color.white);
                contentBox2.setPreferredSize(new Dimension(600, 20));
                contentBox2.setLayout(new GridLayout(2, 1));
                content.add(contentBox2);
                
                //isi conten bawah atas
                JPanel isiContentBox2Top = new JPanel();
                isiContentBox2Top.setBackground(Color.white);
                contentBox2.add(isiContentBox2Top);
                
                // isi konten bawah bawah
                JPanel isiContentBox2Bottom = new JPanel();
                isiContentBox2Bottom.setBackground(Color.white);
                isiContentBox2Bottom.setLayout(new FlowLayout(FlowLayout.RIGHT, 10, 10));
                contentBox2.add(isiContentBox2Bottom);
                int IdMakanan = res.getInt("id_makanan");
                
                
                JButton buttonDetail = new JButton("Detail");

                // Menambahkan ActionListener untuk menangkap klik
                buttonDetail.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        // Cetak nilai i saat tombol diklik
                        iniDetail.setUsernameHome(IdMakanan);
                        iniDetail detail = new iniDetail();
                        detail.setVisible(true);
                        dispose();
                    }
                });
                
                JButton buttonFavorite = new JButton("Favorite");

                // Menambahkan ActionListener untuk menangkap klik
                buttonFavorite.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        // Cetak nilai i saat tombol diklik
                        try {
                            String sql = "INSERT INTO favorite (id_user, id_makanan) VALUES (?, ?)";
                            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                                    pst.setInt(1, idUser);
                                    pst.setInt(2, IdMakanan);
                                    
                                    

                                    pst.execute();
                                    loadCardsFavorite();
                                    
                                    JOptionPane.showMessageDialog(jPanelKategori, "Data berhasil disimpan!");

                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(jPanelKategori, "Error: " + ex.getMessage());
                        }
                    }
                });
                
                // nambahin 2 tombol
                isiContentBox2Bottom.add(buttonFavorite);
                isiContentBox2Bottom.add(buttonDetail);
                
                // ini untuk judul card
                JLabel labelJudul = new JLabel(res.getString("nama_makanan") , SwingConstants.LEFT);
                labelJudul.setFont(fontm24);
                contentBox1.add(labelJudul);
            
                // ini untuk lokasi
                JLabel labelLokasi = new JLabel(res.getString("nama_wilayah"), SwingConstants.LEFT);
                labelLokasi.setFont(fontr14);
                contentBox1.add(labelLokasi);
                
                // ini untuk lokasi
                JLabel labelBahanUtama = new JLabel(res.getString("bahan_utama"), SwingConstants.LEFT);
                labelBahanUtama.setFont(fontr14);
                contentBox1.add(labelBahanUtama);
                
           
            card.add(pic);
            card.add(content);

            // Menambahkan kartu ke panel
            jPanelScrollRecom.add(card);
        }

        // Refresh tampilan
        jPanelScrollRecom.revalidate();
        jPanelScrollRecom.repaint();
        } catch (Exception e) {
        }
        
    }
    
    public int getIdWilayah(String w){
        int idWilayah = 0;
        try {
            String sql = "SELECT id_wilayah FROM wilayah WHERE wilayah = ?";
            Connection conn = koneksi.getKoneksi(); // Pastikan metode koneksi.getKoneksi() mengembalikan objek Connection yang valid
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, w);

            java.sql.ResultSet res = ps.executeQuery();
            if (res.next()) { // Periksa apakah ada hasil
                idWilayah = res.getInt("id_wilayah"); // Ambil nilai kolom 'id_wilayah'
            } 
            
        } catch (Exception e) {
            return 0;
        } 
        return idWilayah;
    }
    
    
    
    
    
    
    
    
    private void loadCardsFavorite() {

        jPanelScrollFavorite.removeAll();
        try {
            
            File fontStyleM1 = new File("src/font/Poppins-Medium.ttf");
            Font fontm24 = Font.createFont(Font.TRUETYPE_FONT, fontStyleM1).deriveFont(24f);
            
            File fontStyleR = new File("src/font/Poppins-Regular.ttf");
            Font fontr14 = Font.createFont(Font.TRUETYPE_FONT, fontStyleR).deriveFont(14f);
            
            String sql = "SELECT makanan.id_makanan, makanan.nama_makanan, wilayah.wilayah, makanan.bahan_utama, makanan.gambar FROM favorite JOIN makanan ON favorite.id_makanan = makanan.id_makanan JOIN wilayah ON makanan.id_wilayah = wilayah.id_wilayah WHERE favorite.id_user = ?;";
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, idUser);
  
            java.sql.ResultSet res = ps.executeQuery();;
            
            while (res.next()){
            // ini untuk card utama
            JPanel card = new JPanel();
            card.setBackground(Color.decode("#ffffff"));

            card.setPreferredSize(new Dimension(809, 200));
            card.setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));
            card.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
            
            // ini untuk gambar
            JPanel pic = new JPanel();
            pic.setBackground(Color.red); // Variasi warna
            pic.setPreferredSize(new Dimension(180, 180));
            pic.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
            pic.setLayout(new BoxLayout(pic, BoxLayout.Y_AXIS));
            
            JLabel labelGambar = new JLabel();
            labelGambar.setFont(new Font("Arial", Font.BOLD, 16));
            
             // Ambil gambar sebagai byte[]
            byte[] imgBytes = res.getBytes("gambar");

            // Konversi byte[] ke ImageIcon
            ImageIcon icon = new ImageIcon(imgBytes);

            // Ubah ukuran gambar (misal: 200x200)
            Image scaledImage = icon.getImage().getScaledInstance(180, 180, Image.SCALE_SMOOTH);
            labelGambar.setIcon(new ImageIcon(scaledImage));
            
            pic.add(labelGambar);
            
            // ini untuk content
            JPanel content = new JPanel();
            content.setBackground(Color.white); // Variasi warna
            content.setPreferredSize(new Dimension(600, 180));
            content.setLayout(new GridLayout(0, 1));
            
                // isi konten paling atas
                JPanel contentBox1 = new JPanel();
                contentBox1.setBackground(Color.white);
                contentBox1.setPreferredSize(new Dimension(600, 20));
                contentBox1.setLayout(new BoxLayout(contentBox1, BoxLayout.Y_AXIS));
  
                content.add(contentBox1);
                
                // isi conten paling bawah
                JPanel contentBox2 = new JPanel();
                contentBox2.setBackground(Color.white);
                contentBox2.setPreferredSize(new Dimension(600, 20));
                contentBox2.setLayout(new GridLayout(2, 1));
                content.add(contentBox2);
                
                //isi conten bawah atas
                JPanel isiContentBox2Top = new JPanel();
                isiContentBox2Top.setBackground(Color.white);
                contentBox2.add(isiContentBox2Top);
                
                // isi konten bawah bawah
                JPanel isiContentBox2Bottom = new JPanel();
                isiContentBox2Bottom.setBackground(Color.white);
                isiContentBox2Bottom.setLayout(new FlowLayout(FlowLayout.RIGHT, 10, 10));
                contentBox2.add(isiContentBox2Bottom);
                 int IdMakanan = res.getInt("id_makanan");
       
                JButton buttonDetail = new JButton("Detail : ");

                // Menambahkan ActionListener untuk menangkap klik
                buttonDetail.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        // Cetak nilai i saat tombol diklik
                        iniDetail.setUsernameHome(IdMakanan);
                        iniDetail detail = new iniDetail();
                        detail.setVisible(true);
                        dispose();
                    }
                });
                

                // nambahin 2 tombol
               
                isiContentBox2Bottom.add(buttonDetail);
                
                // ini untuk judul card
                JLabel labelJudul = new JLabel(res.getString("nama_makanan"), SwingConstants.LEFT);
                labelJudul.setFont(fontm24);
                contentBox1.add(labelJudul);
            
                // ini untuk lokasi
                JLabel labelLokasi = new JLabel(res.getString("wilayah"), SwingConstants.LEFT);
                labelLokasi.setFont(fontr14);
                contentBox1.add(labelLokasi);
                

                // ini untuk lokasi
                JLabel labelBahanUtama = new JLabel(res.getString("bahan_utama"), SwingConstants.LEFT);
                labelBahanUtama.setFont(fontr14);
                contentBox1.add(labelBahanUtama);
                
           
            card.add(pic);
            card.add(content);

            // Menambahkan kartu ke panel
            jPanelScrollFavorite.add(card);
        }

        // Refresh tampilan
        jPanelScrollRecom.revalidate();
        jPanelScrollRecom.repaint();
        } catch (Exception e) {
            e.printStackTrace(); // Menampilkan detail error pada konsol
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    private void loadCardsVerticalCategory() {
  
        
        jPanelScrollCategory1.removeAll();
       

        try {
            File fontStyleM1 = new File("src/font/Poppins-Medium.ttf");
            Font fontm24 = Font.createFont(Font.TRUETYPE_FONT, fontStyleM1).deriveFont(24f);
            
            File fontStyleR = new File("src/font/Poppins-Regular.ttf");
            Font fontr14 = Font.createFont(Font.TRUETYPE_FONT, fontStyleR).deriveFont(14f);
            
            String sql = "SELECT makanan.id_makanan, makanan.gambar, Makanan.gambar, makanan.nama_makanan, makanan.bahan_utama, wilayah.wilayah AS nama_wilayah FROM makanan JOIN wilayah ON  makanan.id_wilayah = wilayah.id_wilayah;";
            String sql3 = "SELECT Makanan.nama_makanan ,Makanan.gambar, Wilayah.wilayah AS nama_wilayah, Makanan.bahan_utama FROM  Makanan JOIN  Wilayah ON Makanan.id_wilayah = Wilayah.id_wilayah WHERE Wilayah.wilayah = 'Jawa Timur';";
            String sql2 = Category;
            
            
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql2);
            System.out.println("lohhh");
            
            
            while (res.next()){
            // ini untuk card utama
            JPanel card = new JPanel();
            card.setBackground(Color.decode("#ffffff")); 
            card.setPreferredSize(new Dimension(809, 200));
            card.setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));
            card.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
            
            // ini untuk gambar
            JPanel pic = new JPanel();
            pic.setBackground(Color.red); // Variasi warna
            pic.setPreferredSize(new Dimension(180, 180));
            pic.setLayout(new BoxLayout(pic, BoxLayout.Y_AXIS));
            pic.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
            
            JLabel labelGambar = new JLabel();
            labelGambar.setFont(new Font("Arial", Font.BOLD, 16));
            
             // Ambil gambar sebagai byte[]
            byte[] imgBytes = res.getBytes("gambar");

            // Konversi byte[] ke ImageIcon
            ImageIcon icon = new ImageIcon(imgBytes);

            // Ubah ukuran gambar (misal: 200x200)
            Image scaledImage = icon.getImage().getScaledInstance(180, 180, Image.SCALE_SMOOTH);
            labelGambar.setIcon(new ImageIcon(scaledImage));
            
            pic.add(labelGambar);
            
            
            // ini untuk content
            JPanel content = new JPanel();
            content.setBackground(Color.white); // Variasi warna
            content.setPreferredSize(new Dimension(600, 180));
            content.setLayout(new GridLayout(0, 1));
            
                // isi konten paling atas
                JPanel contentBox1 = new JPanel();
                contentBox1.setBackground(Color.white);
                contentBox1.setPreferredSize(new Dimension(600, 20));
                contentBox1.setLayout(new BoxLayout(contentBox1, BoxLayout.Y_AXIS));
  
                content.add(contentBox1);
                
                // isi conten paling bawah
                JPanel contentBox2 = new JPanel();
                contentBox2.setBackground(Color.white);
                contentBox2.setPreferredSize(new Dimension(600, 20));
                contentBox2.setLayout(new GridLayout(2, 1));
                content.add(contentBox2);
                
                //isi conten bawah atas
                JPanel isiContentBox2Top = new JPanel();
                isiContentBox2Top.setBackground(Color.white);
                contentBox2.add(isiContentBox2Top);
                
                // isi konten bawah bawah
                JPanel isiContentBox2Bottom = new JPanel();
                isiContentBox2Bottom.setBackground(Color.white);
                isiContentBox2Bottom.setLayout(new FlowLayout(FlowLayout.RIGHT, 10, 10));
                contentBox2.add(isiContentBox2Bottom);
                int IdMakanan = res.getInt("id_makanan");
                int buttonValue = 5; // Salinan nilai i untuk digunakan dalam listener
                JButton buttonDetail = new JButton("Detail");

                // Menambahkan ActionListener untuk menangkap klik
                buttonDetail.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        // Cetak nilai i saat tombol diklik
                        iniDetail.setUsernameHome(IdMakanan);
                        iniDetail detail = new iniDetail();
                        detail.setVisible(true);
                        dispose();
                    }
                });
                
                JButton buttonFavorite = new JButton("Favorite :  " + buttonValue);

                // Menambahkan ActionListener untuk menangkap klik
                buttonFavorite.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        
                        try {
                            String sql = "INSERT INTO favorite (id_user, id_makanan) VALUES (?, ?)";
                            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
                            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                                    pst.setInt(1, idUser);
                                    pst.setInt(2, IdMakanan);
                                    
                                    

                                    pst.execute();
                                    loadCardsFavorite();
                                    
                                    JOptionPane.showMessageDialog(jPanelKategori, "Data berhasil disimpan!");

                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(jPanelKategori, "Error: " + ex.getMessage());
                        }
                    }
                });
                
                // nambahin 2 tombol
                isiContentBox2Bottom.add(buttonFavorite);
                isiContentBox2Bottom.add(buttonDetail);
                
                // ini untuk judul card
                JLabel labelJudul = new JLabel(res.getString("nama_makanan") , SwingConstants.LEFT);
                labelJudul.setFont(fontm24);
                contentBox1.add(labelJudul);
            
                // ini untuk lokasi
                JLabel labelLokasi = new JLabel(res.getString("nama_wilayah"), SwingConstants.LEFT);
                labelLokasi.setFont(fontr14);
                contentBox1.add(labelLokasi);
                
                // ini untuk lokasi
                JLabel labelBahanUtama = new JLabel(res.getString("bahan_utama"), SwingConstants.LEFT);
                labelBahanUtama.setFont(fontr14);
                contentBox1.add(labelBahanUtama);
                
           
            card.add(pic);
            card.add(content);

            // Menambahkan kartu ke panel
            jPanelScrollCategory1.add(card);
        }

        // Refresh tampilan
        jPanelScrollCategory1.revalidate();
        jPanelScrollCategory1.repaint();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }
    private void loadCardsScrollHorizontalCategory() {

        jPanelScrollCategory.removeAll();
        try {
            File fontStyleM1 = new File("src/font/Poppins-Medium.ttf");
            Font fontm24 = Font.createFont(Font.TRUETYPE_FONT, fontStyleM1).deriveFont(24f);
            
            File fontStyleR = new File("src/font/Poppins-Regular.ttf");
            Font fontr14 = Font.createFont(Font.TRUETYPE_FONT, fontStyleR).deriveFont(10f);
            
            String sql = "SELECT * FROM wilayah";
            
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            

            ArrayList<JButton> buttonList = new ArrayList<>();
             while (res.next()) {

                JButton buttonCategory = new JButton(res.getString("wilayah"));
                buttonCategory.setBackground(Color.decode("#ffffff")); 
                buttonCategory.setPreferredSize(new Dimension(100, 100)); 
                buttonCategory.setFont(fontr14);
                buttonList.add(buttonCategory);
                String namaWilayah = res.getString("wilayah");

               buttonCategory.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        // Cetak nilai i saat tombol 
                        Category = "SELECT Makanan.nama_makanan, Makanan.id_makanan ,Makanan.gambar, Wilayah.wilayah AS nama_wilayah, Makanan.bahan_utama FROM  Makanan JOIN  Wilayah ON Makanan.id_wilayah = Wilayah.id_wilayah WHERE Wilayah.wilayah = '"+namaWilayah+"' AND status = 'available';;";
                        
                        for (JButton btn : buttonList) {
                            btn.setBackground(Color.decode("#ffffff"));
                            btn.setForeground(Color.decode("#000000"));
                        }
                        buttonCategory.setBackground(Color.decode("#02613C"));
                        buttonCategory.setForeground(Color.decode("#ffffff"));
                        System.out.println("Button kategori: " + Category);
                        
                        loadCardsVerticalCategory();
                        System.out.println("baiklah");
                    }
                });

            jPanelScrollCategory.add(buttonCategory);
        }

        // Refresh tampilan
        jPanelScrollRecom.revalidate();
        jPanelScrollRecom.repaint();
        } catch (Exception e) {
        }
        
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCenter = new javax.swing.JPanel();
        jPanelCenter1 = new javax.swing.JPanel();
        jPanelRecom = new javax.swing.JPanel();
        jTextFieldSearchRecom = new javax.swing.JTextField();
        jButtonSearchRecom = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanelScrollRecom = new javax.swing.JPanel();
        jPanelKategori = new javax.swing.JPanel();
        jLabelKatgori = new javax.swing.JLabel();
        jLabelKatgori1 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPaneCategory = new javax.swing.JScrollPane();
        jPanelScrollCategory = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanelScrollCategory1 = new javax.swing.JPanel();
        jPanelAddRecipe = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanelScrollFavorite = new javax.swing.JPanel();
        jPanelFavorite = new javax.swing.JPanel();
        jPanelCreateRecipeP = new javax.swing.JPanel();
        jPanelCreateRecipe1 = new javax.swing.JPanel();
        jTextFieldNamaKuliner = new javax.swing.JTextField();
        jLabelNamaKuliner = new javax.swing.JLabel();
        jLabelBahanUtama = new javax.swing.JLabel();
        jTextFieldBahanUtama = new javax.swing.JTextField();
        jLabelTotalHargaBahan = new javax.swing.JLabel();
        jTextFieldTotalHargaBahan = new javax.swing.JTextField();
        jLabelAsal = new javax.swing.JLabel();
        jComboBoxAsal = new javax.swing.JComboBox<>();
        jLabelLangkah = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLangkah = new javax.swing.JTextArea();
        jButtonNext = new javax.swing.JButton();
        jLabelBahanUtama1 = new javax.swing.JLabel();
        jButtonPilihFoto = new javax.swing.JButton();
        jPanelCreateRecipe2 = new javax.swing.JPanel();
        jLabelSejarah = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreajLabelSejarah = new javax.swing.JTextArea();
        jLabelDeskripsi1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaDeskripsi1 = new javax.swing.JTextArea();
        jButtonSubmit = new javax.swing.JButton();
        jLabelCreateYourRecipe = new javax.swing.JLabel();
        jButtonCreateRecipe = new javax.swing.JButton();
        jButtonCreateDeskripsi = new javax.swing.JButton();
        jPanelTop = new javax.swing.JPanel();
        jPanelTop1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelNamaUserHome = new javax.swing.JLabel();
        jLabelKata = new javax.swing.JLabel();
        jPanelProfileShape = new javax.swing.JPanel();
        jLabelLevel = new javax.swing.JLabel();
        jPanelLeft = new javax.swing.JPanel();
        jPanelLeft1 = new javax.swing.JPanel();
        jButtonRecom = new javax.swing.JButton();
        jButtonCategory = new javax.swing.JButton();
        jButtonAddRecipe = new javax.swing.JButton();
        jButtonFavorite = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(969, 716));
        setMinimumSize(new java.awt.Dimension(974, 656));
        setPreferredSize(new java.awt.Dimension(974, 656));

        jPanelCenter.setBackground(new java.awt.Color(242, 242, 238));

        jPanelCenter1.setBackground(new java.awt.Color(242, 242, 238));
        jPanelCenter1.setLayout(new java.awt.CardLayout());

        jPanelRecom.setBackground(new java.awt.Color(242, 242, 238));

        jButtonSearchRecom.setBackground(new java.awt.Color(2, 97, 60));
        jButtonSearchRecom.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearchRecom.setText("Cari");
        jButtonSearchRecom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchRecomActionPerformed(evt);
            }
        });

        jPanelScrollRecom.setBackground(new java.awt.Color(242, 242, 238));
        jPanelScrollRecom.setLayout(new java.awt.GridLayout(0, 1, 0, 10));
        jScrollPane4.setViewportView(jPanelScrollRecom);

        javax.swing.GroupLayout jPanelRecomLayout = new javax.swing.GroupLayout(jPanelRecom);
        jPanelRecom.setLayout(jPanelRecomLayout);
        jPanelRecomLayout.setHorizontalGroup(
            jPanelRecomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRecomLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelRecomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRecomLayout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())
                    .addGroup(jPanelRecomLayout.createSequentialGroup()
                        .addComponent(jTextFieldSearchRecom)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSearchRecom, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        jPanelRecomLayout.setVerticalGroup(
            jPanelRecomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRecomLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelRecomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSearchRecom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchRecom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4)
                .addContainerGap())
        );

        jPanelCenter1.add(jPanelRecom, "cardRecom");

        jPanelKategori.setBackground(new java.awt.Color(242, 242, 238));

        jLabelKatgori.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelKatgori.setText("Category");

        jLabelKatgori1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelKatgori1.setText("Choose Your Coulinary");

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jScrollPaneCategory.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanelScrollCategory.setBackground(new java.awt.Color(242, 242, 238));
        jPanelScrollCategory.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 0));
        jScrollPaneCategory.setViewportView(jPanelScrollCategory);

        jPanelScrollCategory1.setBackground(new java.awt.Color(242, 242, 238));
        jPanelScrollCategory1.setLayout(new java.awt.GridLayout(0, 1, 0, 10));
        jScrollPane7.setViewportView(jPanelScrollCategory1);

        javax.swing.GroupLayout jPanelKategoriLayout = new javax.swing.GroupLayout(jPanelKategori);
        jPanelKategori.setLayout(jPanelKategoriLayout);
        jPanelKategoriLayout.setHorizontalGroup(
            jPanelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelKategoriLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelKatgori1)
                    .addComponent(jLabelKatgori, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelKategoriLayout.createSequentialGroup()
                        .addGroup(jPanelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 824, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPaneCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelKategoriLayout.setVerticalGroup(
            jPanelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelKategoriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelKatgori, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelKategoriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPaneCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelKatgori1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelCenter1.add(jPanelKategori, "cardKategori");

        jPanelAddRecipe.setBackground(new java.awt.Color(242, 242, 238));

        jPanelScrollFavorite.setBackground(new java.awt.Color(242, 242, 238));
        jPanelScrollFavorite.setLayout(new java.awt.GridLayout(0, 1, 0, 10));
        jScrollPane5.setViewportView(jPanelScrollFavorite);

        javax.swing.GroupLayout jPanelAddRecipeLayout = new javax.swing.GroupLayout(jPanelAddRecipe);
        jPanelAddRecipe.setLayout(jPanelAddRecipeLayout);
        jPanelAddRecipeLayout.setHorizontalGroup(
            jPanelAddRecipeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAddRecipeLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanelAddRecipeLayout.setVerticalGroup(
            jPanelAddRecipeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );

        jPanelCenter1.add(jPanelAddRecipe, "cardAddRecipe");

        jPanelFavorite.setBackground(new java.awt.Color(242, 242, 238));

        jPanelCreateRecipeP.setBackground(new java.awt.Color(242, 242, 238));
        jPanelCreateRecipeP.setLayout(new java.awt.CardLayout());

        jPanelCreateRecipe1.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldNamaKuliner.setBackground(new java.awt.Color(242, 242, 238));

        jLabelNamaKuliner.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelNamaKuliner.setText("Nama Coulinary");

        jLabelBahanUtama.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelBahanUtama.setText("Bahan Utama");

        jTextFieldBahanUtama.setBackground(new java.awt.Color(242, 242, 238));

        jLabelTotalHargaBahan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelTotalHargaBahan.setText("Total Harga Bahan");

        jTextFieldTotalHargaBahan.setBackground(new java.awt.Color(242, 242, 238));
        jTextFieldTotalHargaBahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTotalHargaBahanActionPerformed(evt);
            }
        });

        jLabelAsal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelAsal.setText("Asal");

        jComboBoxAsal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabelLangkah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelLangkah.setText("Bahan-bahan/Langkah-langkah");

        jTextAreaLangkah.setColumns(20);
        jTextAreaLangkah.setRows(5);
        jScrollPane1.setViewportView(jTextAreaLangkah);

        jButtonNext.setBackground(new java.awt.Color(233, 157, 40));
        jButtonNext.setForeground(new java.awt.Color(255, 255, 255));
        jButtonNext.setText("Next");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jLabelBahanUtama1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelBahanUtama1.setText("Foto");

        jButtonPilihFoto.setText("Pilih Foto");
        jButtonPilihFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPilihFotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCreateRecipe1Layout = new javax.swing.GroupLayout(jPanelCreateRecipe1);
        jPanelCreateRecipe1.setLayout(jPanelCreateRecipe1Layout);
        jPanelCreateRecipe1Layout.setHorizontalGroup(
            jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreateRecipe1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCreateRecipe1Layout.createSequentialGroup()
                        .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCreateRecipe1Layout.createSequentialGroup()
                                .addComponent(jTextFieldNamaKuliner, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldTotalHargaBahan))
                            .addGroup(jPanelCreateRecipe1Layout.createSequentialGroup()
                                .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelBahanUtama, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldBahanUtama, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonPilihFoto)
                                    .addComponent(jLabelBahanUtama1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxAsal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanelCreateRecipe1Layout.createSequentialGroup()
                                        .addComponent(jLabelAsal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 153, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCreateRecipe1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45))
                    .addGroup(jPanelCreateRecipe1Layout.createSequentialGroup()
                        .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelLangkah, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelCreateRecipe1Layout.createSequentialGroup()
                                .addComponent(jLabelNamaKuliner, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(433, 433, 433)
                                .addComponent(jLabelTotalHargaBahan, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanelCreateRecipe1Layout.setVerticalGroup(
            jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreateRecipe1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNamaKuliner, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalHargaBahan, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNamaKuliner, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTotalHargaBahan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBahanUtama, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAsal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBahanUtama1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonPilihFoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelCreateRecipe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldBahanUtama, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxAsal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addComponent(jLabelLangkah, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        jPanelCreateRecipeP.add(jPanelCreateRecipe1, "cardRecipe");

        jPanelCreateRecipe2.setBackground(new java.awt.Color(255, 255, 255));

        jLabelSejarah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelSejarah.setText("Sejarah Singkat Kuliner");

        jTextAreajLabelSejarah.setColumns(20);
        jTextAreajLabelSejarah.setRows(5);
        jScrollPane2.setViewportView(jTextAreajLabelSejarah);

        jLabelDeskripsi1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelDeskripsi1.setText("Deskripsi Kuliner");

        jTextAreaDeskripsi1.setColumns(20);
        jTextAreaDeskripsi1.setRows(5);
        jScrollPane3.setViewportView(jTextAreaDeskripsi1);

        jButtonSubmit.setBackground(new java.awt.Color(2, 97, 60));
        jButtonSubmit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSubmit.setText("Submit");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCreateRecipe2Layout = new javax.swing.GroupLayout(jPanelCreateRecipe2);
        jPanelCreateRecipe2.setLayout(jPanelCreateRecipe2Layout);
        jPanelCreateRecipe2Layout.setHorizontalGroup(
            jPanelCreateRecipe2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreateRecipe2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanelCreateRecipe2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCreateRecipe2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                        .addComponent(jLabelDeskripsi1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelSejarah, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanelCreateRecipe2Layout.setVerticalGroup(
            jPanelCreateRecipe2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreateRecipe2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabelSejarah, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDeskripsi1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButtonSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanelCreateRecipeP.add(jPanelCreateRecipe2, "cardDeskripsi");

        jLabelCreateYourRecipe.setBackground(new java.awt.Color(158, 174, 162));
        jLabelCreateYourRecipe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelCreateYourRecipe.setText("Create Your Recipe and Description");

        jButtonCreateRecipe.setBackground(new java.awt.Color(2, 97, 60));
        jButtonCreateRecipe.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCreateRecipe.setText("Resep");
        jButtonCreateRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateRecipeActionPerformed(evt);
            }
        });

        jButtonCreateDeskripsi.setForeground(new java.awt.Color(158, 174, 162));
        jButtonCreateDeskripsi.setText("Deskripsi");
        jButtonCreateDeskripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateDeskripsiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFavoriteLayout = new javax.swing.GroupLayout(jPanelFavorite);
        jPanelFavorite.setLayout(jPanelFavoriteLayout);
        jPanelFavoriteLayout.setHorizontalGroup(
            jPanelFavoriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFavoriteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCreateYourRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCreateRecipe)
                .addGap(18, 18, 18)
                .addComponent(jButtonCreateDeskripsi)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFavoriteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelCreateRecipeP, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFavoriteLayout.setVerticalGroup(
            jPanelFavoriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFavoriteLayout.createSequentialGroup()
                .addGroup(jPanelFavoriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCreateYourRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreateRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreateDeskripsi, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCreateRecipeP, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelCenter1.add(jPanelFavorite, "cardFavorite");

        javax.swing.GroupLayout jPanelCenterLayout = new javax.swing.GroupLayout(jPanelCenter);
        jPanelCenter.setLayout(jPanelCenterLayout);
        jPanelCenterLayout.setHorizontalGroup(
            jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCenter1, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanelCenterLayout.setVerticalGroup(
            jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCenter1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        jPanelTop.setBackground(new java.awt.Color(242, 242, 238));

        jPanelTop1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridLayout(2, 0));

        jLabelNamaUserHome.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelNamaUserHome.setText("ini Nama");
        jPanel1.add(jLabelNamaUserHome);

        jLabelKata.setText("cobaaaa");
        jPanel1.add(jLabelKata);

        jPanelProfileShape.setBackground(new java.awt.Color(2, 97, 60));
        jPanelProfileShape.setPreferredSize(new java.awt.Dimension(54, 54));

        javax.swing.GroupLayout jPanelProfileShapeLayout = new javax.swing.GroupLayout(jPanelProfileShape);
        jPanelProfileShape.setLayout(jPanelProfileShapeLayout);
        jPanelProfileShapeLayout.setHorizontalGroup(
            jPanelProfileShapeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
        );
        jPanelProfileShapeLayout.setVerticalGroup(
            jPanelProfileShapeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabelLevel.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLevel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLevel.setText("lvl 5");

        javax.swing.GroupLayout jPanelTop1Layout = new javax.swing.GroupLayout(jPanelTop1);
        jPanelTop1.setLayout(jPanelTop1Layout);
        jPanelTop1Layout.setHorizontalGroup(
            jPanelTop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTop1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanelProfileShape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 384, Short.MAX_VALUE)
                .addComponent(jLabelLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanelTop1Layout.setVerticalGroup(
            jPanelTop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTop1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelTop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTop1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabelLevel))
                    .addGroup(jPanelTop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                        .addComponent(jPanelProfileShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelTopLayout = new javax.swing.GroupLayout(jPanelTop);
        jPanelTop.setLayout(jPanelTopLayout);
        jPanelTopLayout.setHorizontalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTop1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelTopLayout.setVerticalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTop1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanelTop, java.awt.BorderLayout.PAGE_START);

        jPanelLeft.setBackground(new java.awt.Color(242, 242, 238));

        jPanelLeft1.setBackground(new java.awt.Color(255, 255, 255));

        jButtonRecom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecomActionPerformed(evt);
            }
        });

        jButtonCategory.setBackground(new java.awt.Color(242, 242, 238));
        jButtonCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCategoryActionPerformed(evt);
            }
        });

        jButtonAddRecipe.setBackground(new java.awt.Color(242, 242, 238));
        jButtonAddRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddRecipeActionPerformed(evt);
            }
        });

        jButtonFavorite.setBackground(new java.awt.Color(242, 242, 238));
        jButtonFavorite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFavoriteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLeft1Layout = new javax.swing.GroupLayout(jPanelLeft1);
        jPanelLeft1.setLayout(jPanelLeft1Layout);
        jPanelLeft1Layout.setHorizontalGroup(
            jPanelLeft1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeft1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelLeft1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFavorite, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRecom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanelLeft1Layout.setVerticalGroup(
            jPanelLeft1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeft1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButtonRecom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonAddRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonFavorite, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(247, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelLeftLayout = new javax.swing.GroupLayout(jPanelLeft);
        jPanelLeft.setLayout(jPanelLeftLayout);
        jPanelLeftLayout.setHorizontalGroup(
            jPanelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelLeft1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelLeftLayout.setVerticalGroup(
            jPanelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelLeft1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanelLeft, java.awt.BorderLayout.LINE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void setFont(){
        try{
            File fontStyle = new File("src/font/Poppins-Regular.ttf");
            File fontStyleSB = new File("src/font/Poppins-SemiBold.ttf");
            File fontStyleM = new File("src/font/Poppins-Medium.ttf");
            Font fontm18 = Font.createFont(Font.TRUETYPE_FONT, fontStyleM).deriveFont(18f);
            Font fontm12 = Font.createFont(Font.TRUETYPE_FONT, fontStyleM).deriveFont(12f);
            Font fontsb40 = Font.createFont(Font.TRUETYPE_FONT, fontStyleSB).deriveFont(40f);
            
            Font fontRegular12 = Font.createFont(Font.TRUETYPE_FONT, fontStyle).deriveFont(12f);
            Font font1 = Font.createFont(Font.TRUETYPE_FONT, fontStyle).deriveFont(24f);
            
            jLabelCreateYourRecipe.setFont(fontm18);
            jLabelCreateYourRecipe.setForeground(Color.decode("#9eaea2"));
            jButtonCreateRecipe.setFont(fontm12);
            
            jButtonCreateDeskripsi.setFont(fontm12);
            jLabelNamaUserHome.setForeground(Color.black);
            jLabelNamaUserHome.setFont(fontm18);
            jLabelKata.setForeground(Color.black);
            jLabelKata.setFont(fontRegular12);
            
        }catch(Exception e){
            e.printStackTrace(); 
        }
    }
    
    private void colorPanel(){
        jPanelAddRecipe.setBackground(Color.decode("#f2f2ee"));
//        jPanelAddRecipe.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
        jPanelRecom.setBackground(Color.decode("#f2f2ee"));
//        jPanelRecom.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
        jPanelKategori.setBackground(Color.decode("#f2f2ee"));
//        jPanelKategori.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
        jPanelFavorite.setBackground(Color.decode("#f2f2ee"));
//        jPanelFavorite.putClientProperty( FlatClientProperties.STYLE, "arc: 16" );
    }
    private void jButtonRecomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecomActionPerformed
        // TODO add your handling code here:
        JButton[] buttons = {
            jButtonRecom, jButtonAddRecipe, jButtonCategory, jButtonFavorite
        };
        for (JButton iniTombol: buttons){
         iniTombol.setBackground(Color.decode("#f2f2ee"));
        }
        jButtonRecom.setBackground(Color.WHITE);
        
        CardLayout cl = (CardLayout) (jPanelCenter1.getLayout());
        cl.show(jPanelCenter1, "cardRecom");

    }//GEN-LAST:event_jButtonRecomActionPerformed

    private void jButtonCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCategoryActionPerformed
        // TODO add your handling code here:
        JButton[] buttons = {
            jButtonRecom, jButtonAddRecipe, jButtonCategory, jButtonFavorite
        };
        for (JButton iniTombol: buttons){
         iniTombol.setBackground(Color.decode("#f2f2ee"));
        
        }
        jButtonCategory.setBackground(Color.WHITE);
        
        CardLayout cl = (CardLayout) (jPanelCenter1.getLayout());
        cl.show(jPanelCenter1, "cardKategori");
    }//GEN-LAST:event_jButtonCategoryActionPerformed

    private void jButtonAddRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddRecipeActionPerformed
        // TODO add your handling code here:
        JButton[] buttons = {
            jButtonRecom, jButtonAddRecipe, jButtonCategory, jButtonFavorite
        };
        for (JButton iniTombol: buttons){
         iniTombol.setBackground(Color.decode("#f2f2ee"));
     }
        jButtonAddRecipe.setBackground(Color.WHITE);
        
        CardLayout cl = (CardLayout) (jPanelCenter1.getLayout());
        cl.show(jPanelCenter1, "cardAddRecipe");
    }//GEN-LAST:event_jButtonAddRecipeActionPerformed

    private void jButtonFavoriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFavoriteActionPerformed
        // TODO add your handling code here:
        JButton[] buttons = {
            jButtonRecom, jButtonAddRecipe, jButtonCategory, jButtonFavorite
        };
        for (JButton iniTombol: buttons){
         iniTombol.setBackground(Color.decode("#f2f2ee"));
     }
        jButtonFavorite.setBackground(Color.WHITE);
        
        CardLayout cl = (CardLayout) (jPanelCenter1.getLayout());
        cl.show(jPanelCenter1, "cardFavorite");
    }//GEN-LAST:event_jButtonFavoriteActionPerformed

    private void jButtonCreateDeskripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateDeskripsiActionPerformed
        // TODO add your handling code here:
         JButton[] buttons = {
            jButtonCreateRecipe, jButtonCreateDeskripsi
        };
        
        for (JButton iniTombol: buttons){
         iniTombol.setBackground(Color.decode("#ffffff"));
         iniTombol.setForeground(Color.decode("#9eaea2"));
         
        }
        jButtonCreateDeskripsi.setBackground(Color.decode("#02613c"));
        jButtonCreateDeskripsi.setForeground(Color.decode("#ffffff"));
        
        CardLayout cl = (CardLayout) (jPanelCreateRecipeP.getLayout());
        cl.show(jPanelCreateRecipeP, "cardDeskripsi");
    }//GEN-LAST:event_jButtonCreateDeskripsiActionPerformed

    private void jButtonCreateRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateRecipeActionPerformed
        // TODO add your handling code here:
        JButton[] buttons = {
            jButtonCreateRecipe, jButtonCreateDeskripsi
        };
        
        for (JButton iniTombol: buttons){
         iniTombol.setBackground(Color.white);
         iniTombol.setForeground(Color.decode("#9eaea2"));
         
        }
        jButtonCreateRecipe.setBackground(Color.decode("#02613c"));
        jButtonCreateRecipe.setForeground(Color.decode("#ffffff"));
        
        CardLayout cl = (CardLayout) (jPanelCreateRecipeP.getLayout());
        cl.show(jPanelCreateRecipeP, "cardRecipe");
    }//GEN-LAST:event_jButtonCreateRecipeActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jTextFieldTotalHargaBahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTotalHargaBahanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTotalHargaBahanActionPerformed

    private void jButtonPilihFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPilihFotoActionPerformed
        // TODO add your handling code here:
        pilihFoto();
        
    }//GEN-LAST:event_jButtonPilihFotoActionPerformed

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        // TODO add your handling code here:
        simpanData();
        createCards();
        loadCardsVerticalCategory();
    }//GEN-LAST:event_jButtonSubmitActionPerformed

    private void jButtonSearchRecomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchRecomActionPerformed
        // TODO add your handling code here:
        if (jTextFieldSearchRecom.getText().trim().isEmpty()) {
            Search = "SELECT makanan.id_makanan, makanan.gambar, makanan.nama_makanan, makanan.bahan_utama, wilayah.wilayah AS nama_wilayah FROM makanan JOIN wilayah ON  makanan.id_wilayah = wilayah.id_wilayah;";
            createCards();
        } else {
            String isi = jTextFieldSearchRecom.getText();
            Search = "SELECT makanan.id_makanan, makanan.gambar, makanan.nama_makanan, makanan.bahan_utama, wilayah.wilayah AS nama_wilayah "
              + "FROM makanan "
              + "JOIN wilayah ON makanan.id_wilayah = wilayah.id_wilayah "
              + "WHERE makanan.nama_makanan LIKE '%" + isi + "%' "
              + "OR makanan.bahan_utama LIKE '%" + isi + "%' "
              + "OR wilayah.wilayah LIKE '%" + isi + "%' AND status = 'available';";
            
            System.out.println(Search);
                jPanelScrollRecom.setLayout(new GridLayout(0, 1, 10, 10));
                System.out.println("jalan 2");
            
            createCards();
            System.out.println(Data);
            if(!Data){
                jPanelScrollRecom.setLayout(new BoxLayout(jPanelScrollRecom, BoxLayout.X_AXIS));
                ImageIcon imageIcon = new ImageIcon("src/font/notfound.png");

                JLabel gambar = new JLabel(imageIcon);

                System.out.println("jalan 2");
                jPanelScrollRecom.add(gambar);
                
            }
        }
        
    }//GEN-LAST:event_jButtonSearchRecomActionPerformed
    
    private void pilihFoto() {
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(this);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(selectedFile.getAbsolutePath())
                    .getImage().getScaledInstance(200, 150, java.awt.Image.SCALE_SMOOTH));

        }
    }
    
    private void load_comboBoxKaryawanProyek(){
        try {
            jComboBoxAsal.removeAllItems();
            
            String sql = "select wilayah from wilayah";
          
            java.sql.Connection conn = (Connection) koneksi.getKoneksi();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            
            while (res.next()){
                String namaKaryawan = res.getString("wilayah");
                jComboBoxAsal.addItem(namaKaryawan);
            } 
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

     private void simpanData() {

    if (selectedFile == null) {
        JOptionPane.showMessageDialog(this, "Pilih foto terlebih dahulu!");
        return;
    }

    try {
        String sql = "INSERT INTO makanan (nama_makanan, bahan_utama, total_harga_bahan, langkah_langkah, deskripsi, sejarah, gambar, id_wilayah, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
        java.sql.Connection conn = (Connection) koneksi.getKoneksi();
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, jTextFieldNamaKuliner.getText());
                pst.setString(2, jTextFieldBahanUtama.getText());
                pst.setInt(3, Integer.parseInt(jTextFieldTotalHargaBahan.getText()));
                pst.setString(4, jTextAreaLangkah.getText());
                pst.setString(5, jTextAreaDeskripsi1.getText());
                pst.setString(6, jTextAreajLabelSejarah.getText());
        
                FileInputStream fis = new FileInputStream(selectedFile);
                pst.setBinaryStream(7, fis, (int) selectedFile.length());
                
                String namaAsal = String.valueOf(jComboBoxAsal.getSelectedItem());
                pst.setInt(8, getIdWilayah(namaAsal));
                pst.setString(9, "unavailable");
                
                pst.execute();
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
                
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
//            UIManager.put( "TextComponent.arc", 10 );
            UIManager.put( "Button.arc", 10 );
            UIManager.put( "TextComponent.arc", 10 );
            UIManager.put( "ScrollBar.width", 5 );
//            UIManager.put("Button.border", BorderFactory.createLineBorder(Color.RED));
  

        } catch (Exception e) {
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddRecipe;
    private javax.swing.JButton jButtonCategory;
    private javax.swing.JButton jButtonCreateDeskripsi;
    private javax.swing.JButton jButtonCreateRecipe;
    private javax.swing.JButton jButtonFavorite;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPilihFoto;
    private javax.swing.JButton jButtonRecom;
    private javax.swing.JButton jButtonSearchRecom;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JComboBox<String> jComboBoxAsal;
    private javax.swing.JLabel jLabelAsal;
    private javax.swing.JLabel jLabelBahanUtama;
    private javax.swing.JLabel jLabelBahanUtama1;
    private javax.swing.JLabel jLabelCreateYourRecipe;
    private javax.swing.JLabel jLabelDeskripsi1;
    private javax.swing.JLabel jLabelKata;
    private javax.swing.JLabel jLabelKatgori;
    private javax.swing.JLabel jLabelKatgori1;
    private javax.swing.JLabel jLabelLangkah;
    private javax.swing.JLabel jLabelLevel;
    private javax.swing.JLabel jLabelNamaKuliner;
    private javax.swing.JLabel jLabelNamaUserHome;
    private javax.swing.JLabel jLabelSejarah;
    private javax.swing.JLabel jLabelTotalHargaBahan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanelAddRecipe;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelCenter1;
    private javax.swing.JPanel jPanelCreateRecipe1;
    private javax.swing.JPanel jPanelCreateRecipe2;
    private javax.swing.JPanel jPanelCreateRecipeP;
    private javax.swing.JPanel jPanelFavorite;
    private javax.swing.JPanel jPanelKategori;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelLeft1;
    private javax.swing.JPanel jPanelProfileShape;
    private javax.swing.JPanel jPanelRecom;
    private javax.swing.JPanel jPanelScrollCategory;
    private javax.swing.JPanel jPanelScrollCategory1;
    private javax.swing.JPanel jPanelScrollFavorite;
    private javax.swing.JPanel jPanelScrollRecom;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JPanel jPanelTop1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPaneCategory;
    private javax.swing.JTextArea jTextAreaDeskripsi1;
    private javax.swing.JTextArea jTextAreaLangkah;
    private javax.swing.JTextArea jTextAreajLabelSejarah;
    private javax.swing.JTextField jTextFieldBahanUtama;
    private javax.swing.JTextField jTextFieldNamaKuliner;
    private javax.swing.JTextField jTextFieldSearchRecom;
    private javax.swing.JTextField jTextFieldTotalHargaBahan;
    // End of variables declaration//GEN-END:variables
}
